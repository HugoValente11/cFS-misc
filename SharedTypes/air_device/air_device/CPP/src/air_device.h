/* C++ Function Type
 * Header file for function Air_Device in CPP language
 * Generated by TASTE on 2020-04-29 11:05:33
 * Context Parameters present : YES
 * Provided interfaces : Poll_Device, Write_to_Device
 * Required interfaces : Received_Data
 * User-defined properties for this function:
  *  |_ Taste::Active_Interfaces = any
  *  |_ Taste::coordinates = 79210 62203 130390 105028
  *  |_ Taste::is_Component_Type = true
 * DO NOT EDIT THIS FILE, IT WILL BE OVERWRITTEN DURING THE BUILD
 */

#pragma once

#include "dataview-uniq.h"
#include "air_device_state.h"
#include "Context-air-device.h"

class air_device {
   // These are the required interfaces you can call from application code:
   typedef void (*RI_Received_Data_ptr) ( const asn1SccData_Stream * );
   RI_Received_Data_ptr RI_Received_Data;

   // the ctxt member allows you to define your per-instance global data
   air_device_state ctxt;

   // Context parameters specified in the interface view
   asn1SccContext_air_device config;

public:
   air_device(RI_Received_Data_ptr RI_Received_Data_arg, asn1SccContext_air_device config_arg=air_device_ctxt):
      RI_Received_Data(RI_Received_Data_arg),
      config(config_arg) {}
   void startup();
   /* Provided interfaces */
   void Poll_Device( );
   void Write_to_Device( const asn1SccData_Stream * );
};
